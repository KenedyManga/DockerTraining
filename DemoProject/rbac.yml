# ----------------------------------------
# Create a namespace named rbac-ns
# ----------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: rbac-ns

---

# ----------------------------------------
# Create a ServiceAccount in rbac-ns
# ----------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: myapp-sa
  namespace: rbac-ns

---

# ----------------------------------------
# Create a Role to allow pod read access in rbac-ns
# ----------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: rbac-ns
rules:
- apiGroups: [""]           # "" = core API group
  resources: ["pods"]       # Grants access to pods
  verbs: ["get", "list"]    # Allows reading pod info

---

# ----------------------------------------
# Bind the Role to the ServiceAccount in rbac-ns
# ----------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods-binding
  namespace: rbac-ns
subjects:
- kind: ServiceAccount
  name: myapp-sa
  namespace: rbac-ns
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io

---

# ----------------------------------------
# Create a ClusterRole to allow pod read access across all namespaces
# ----------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cluster-pod-reader
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]

---

# ----------------------------------------
# Bind the ClusterRole to a user named alice (cluster-wide access)
# ----------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alice-read-all-pods
subjects:
- kind: User
  name: alice                 # Must match the user configured in auth provider
roleRef:
  kind: ClusterRole
  name: cluster-pod-reader
  apiGroup: rbac.authorization.k8s.io